<div>
  <h2>Stocks de carbone</h2>
  <p class="fr-text--sm fr-mb-1w">Occupation du sol CLC 2018 & BD Forêts IGN & BD Haies IGN</p>
  <%- include('../partials/calculation-warning') -%>
  <!-- TODO: why does an anchor link break the table tabs? -->
  <!-- <p class="fr-col-12 fr-mb-1w fr-text--sm"><a href="#tableur-stocks">Résultats détaillés</a></p> -->
  <!-- TODO: test a11y of these charts -->
  <div class="fr-col-12 fr-col-lg-8 fr-pb-4w">
    <ul class="fr-accordions-group" data-fr-js-accordions-group="true">
      <% for (let keyIdx=0; keyIdx < Object.keys(charts).length; keyIdx++) { %>
      <% const key = Object.keys(charts)[keyIdx] %>
      <li>
        <section class="fr-accordion">
          <h3 class="fr-accordion__title">
            <button type="button" class="fr-accordion__btn" aria-expanded="<%= keyIdx === 0 %>" aria-controls="accordion-chart-<%= keyIdx %>">
              <%= charts[key].title %>
            </button>
          </h3>
          <div class="fr-collapse" id="accordion-chart-<%= keyIdx %>">
            <% if (charts[key].note) { %>
            <p><%= charts[key].note %></p>
            <% } %>
            <div class="chart-wrapper">
              <canvas id="chart-<%= key %>"></canvas>
            </div>
          </div>
        </section>
      </li>
      <% } %>
    </ul>
  </div>
  <div class="fr-table fr-col-12 fr-col-lg-10 fr-pr-md-1w fr-mt-2w">
    <table class="detail-table">
      <caption>Stocks de carbone par occupation du sol</caption>
      <thead>
        <tr class="expandable-row-header stocks-row">
          <th scope="col">Occupation du sol</th>
          <th scope="col">Surface (ha)</th>
          <th scope="col">Stocks de carbone (tC)</th>
          <th scope="col">Stocks de carbone (%)</th>
          <td scope="col"></td>
        </tr>
      </thead>
      <tbody>
        <% for( let index=0; index < groundTypes.length; index++ ) { %>
        <% const groundType = groundTypes[index] %>
        <% const thisStock = stocks[groundType.stocksId] %>
        <% const stocksId = groundTypes[index].stocksId %>
        <% if (stocksId === 'produits bois' || stocksId === 'haies') { %>
        <% continue %>
        <% } %>
        <!-- TODO: make row blue if area modified -->
        <tr class="expandable-row stocks-row">
          <td onClick='toggleRow(this)'>
            <%= groundType.name %> <%= thisStock.hasModifications ? '*' : '' %>
          </td>
          <td onClick='toggleRow(this)' style="text-align: right;">
            <% if (thisStock.area !==undefined) { %>
            <%= formatNumber(thisStock.area) %>
            <% } else { %>
            <i title="Les stocks générés par l’usage de produits bois ne sont pas liés à une surface d’occupation du sol.">Pas applicable</i>
            <% } %>
          </td>
          <td onClick='toggleRow(this)' style="text-align: right;">
            <%= formatNumber(thisStock.totalStock) %>
          </td>
          <td onClick='toggleRow(this)' style="text-align: right;">
            <% if (thisStock.stockPercentage> 10) { %>
            <b>
              <%= formatNumber(thisStock.stockPercentage) %> %
            </b>
            <% } else { %>
            <%= formatNumber(thisStock.stockPercentage) %> %
            <% } %>
          </td>
          <td onClick='toggleRow(this)'>
            <button onClick='toggleRow(this)' type="button">
              <span class="fr-fi-question-line" aria-hidden="true" style="color: #555"></span>
            </button>
          </td>
          <td class='expanded-row-content hide-row'>
            <!-- TODO: reset input values if URL doesn't contain the relevant query value -->
            <% if (simpleStocks.indexOf(stocksId) > -1) { %>
            <%- include('stockCalculations/simple', {index, stocksId, stock: thisStock }) -%>
            <% } else if (thisStock.children) { %>
            <%- include('stockCalculations/subtypes', {stocksId, stock: thisStock}) -%>
            <% } %>
            <!-- indicate if sols artificiels proportion was changed ? -->
          </td>
        </tr>
        <% } %>
      </tbody>
    </table>
    <% if (stocksHaveModifications) { %>
    <p class="fr-text--sm fr-mt-1w">* Données modifiées</p>
    <a class="fr-btn fr-btn--secondary fr-mt-1w" href="<%= getTabUrl('stocks') %><%= resetQueryStr %>">
      Réinitialiser les données
    </a>
    <% } %>
    <p class="fr-text--sm fr-mt-1w">
      <a href="https://docs.datagir.ademe.fr/documentation-aldo/stocks/occupation-du-sol-et-foret" target="_blank" rel="noopener noreferrer">
        En savoir plus sur les méthodes de calculs
      </a>
    </p>
  </div>
  <div class="fr-table fr-col-12 fr-col-lg-10 fr-pr-md-1w fr-mt-2w">
    <table class="detail-table">
      <caption>Autres stocks de carbone</caption>
      <thead>
        <tr class="expandable-row-header other-stocks-row">
          <th scope="col">Réservoir</th>
          <th scope="col">Stocks de carbone (tC)</th>
          <th scope="col">Stocks de carbone (%)</th>
          <td scope="col"></td>
        </tr>
      </thead>
      <tbody>
        <% for( let index=0; index < groundTypes.length; index++ ) { %>
        <% const groundType = groundTypes[index] %>
        <% const thisStock = stocks[groundType.stocksId] %>
        <% const stocksId = groundTypes[index].stocksId %>
        <% if (stocksId !== 'produits bois' && stocksId !== 'haies') { %>
        <% continue %>
        <% } %>
        <tr class="expandable-row other-stocks-row">
          <td onClick='toggleRow(this)'>
            <%= groundType.name %> <%= thisStock.hasModifications ? '*' : '' %>
          </td>
          <td onClick='toggleRow(this)' style="text-align: right;">
            <%= formatNumber(thisStock.totalStock) %>
          </td>
          <td onClick='toggleRow(this)' style="text-align: right;">
            <% if (thisStock.stockPercentage > 10) { %>
            <b>
              <%= formatNumber(thisStock.stockPercentage) %> %
            </b>
            <% } else { %>
            <%= formatNumber(thisStock.stockPercentage) %> %
            <% } %>
          </td>
          <td onClick='toggleRow(this)'>
            <button onClick='toggleRow(this)' type="button">
              <span class="fr-fi-question-line" aria-hidden="true" style="color: #555"></span>
            </button>
          </td>
          <td class='expanded-row-content hide-row'>
            <!-- TODO: reset input values if URL doesn't contain the relevant query value -->
            <% if ( stocksId === 'produits bois' ) { %>
            <%- include('stockCalculations/wood', { stock: thisStock, woodCalculation }) -%>
            <% } else if ( stocksId === 'haies' ) { %>
            <%- include('stockCalculations/hedges', { stock: thisStock }) -%>
            <% } %>
          </td>
        </tr>
        <% } %>
      </tbody>
    </table>
    <% if (stocksHaveModifications) { %>
    <p class="fr-text--sm fr-mt-1w">* Données modifiées</p>
    <a class="fr-btn fr-btn--secondary fr-mt-1w" href="<%= getTabUrl('stocks') %><%= resetQueryStr %>">
      Réinitialiser les données
    </a>
    <% } %>
    <p class="fr-text--sm fr-mt-1w">
      <a href="https://docs.datagir.ademe.fr/documentation-aldo/stocks/occupation-du-sol-et-foret" target="_blank" rel="noopener noreferrer">
        En savoir plus sur les méthodes de calculs
      </a>
    </p>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
<script>
  Chart.register(ChartDataLabels);
  Chart.defaults.set('plugins.datalabels', {
    anchor: 'center',
    display(context) {
      // don't show labels when value === 0. Important for pie charts when dataIndex of a 0 is higher than a later data with a value > 0
      return context.dataset.data[context.dataIndex] > 0
    }
  });

  const groundTypeCtx = document.getElementById('chart-groundType');
  const groundTypeChartData = JSON.parse(`<%- charts.groundType.data %>`);
  new Chart(groundTypeCtx, groundTypeChartData);

  const ctx = document.getElementById('chart-reservoir');
  const chartData = JSON.parse(`<%- charts.reservoir.data %>`);
  new Chart(ctx, chartData);

  const densityCtx = document.getElementById('chart-density');
  const densityChartData = JSON.parse(`<%- charts.density.data %>`);
  new Chart(densityCtx, densityChartData);

  const groundAndLitterCtx = document.getElementById('chart-groundAndLitter');
  const groundAndLitterChartData = JSON.parse(`<%- charts.groundAndLitter.data %>`);
  new Chart(groundAndLitterCtx, groundAndLitterChartData);

  const biomassCtx = document.getElementById('chart-biomass');
  const biomassChartData = JSON.parse(`<%- charts.biomass.data %>`);
  new Chart(biomassCtx, biomassChartData);

  const groundTypeStackedCtx = document.getElementById('chart-groundTypeStacked');
  const groundTypeStackedChartData = JSON.parse(`<%- charts.groundTypeStacked.data %>`);
  new Chart(groundTypeStackedCtx, groundTypeStackedChartData);
</script>