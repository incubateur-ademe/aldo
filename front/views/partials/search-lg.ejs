<div class="fr-container-fluid fr-my-6w">
  <form action="/regroupement" method="GET" class="fr-col-12 fr-col-md-8">
    <div role="search">
      <label class="fr-label fr-mb-1w" for="location-search">
        Choisir un ou plusieurs t√©rritoires
      </label>
      <ul id="locations" class="fr-tags-group">
      </ul>
      <div class="fr-grid-row">
        <input class="fr-input fr-col-12 fr-col-md-6" placeholder="Taper le nom, SIREN, ou code INSEE..." type="search" id="location-search" list="location-names" autocomplete="off">
        <button id="add-tag" class="fr-btn fr-btn--secondary fr-mx-1w fr-mt-1w fr-mt-md-0" title="Ajouter">
          Ajouter
        </button>
        <!-- TODO: how to provide feedback if left locations empty? -->
        <button class="fr-btn fr-mt-1w fr-mt-md-0" title="Rechercher">
          Rechercher
        </button>
      </div>
      <datalist id="location-names">
        <% for (let index = 0; index < epcis.length; index++) {%>
        <option value="<%= epcis[index].code %> "><%= epcis[index].nom %> (<%= epcis[index].code %>)</option>
        <%} %>
      </datalist>
    </div>
    <p class="fr-text--xs fr-my-1w">Nous utilisons les noms d'EPCI de la fin de 2018</p>
  </form>
</div>
<script>
  const COMMUNE_INSEE_CODE_LENGTH = 5
  const EPCI_SIREN_LENGTH = 9

  let locations
  $(document).ready(() => {
    locations = {}
    $.getJSON("static/data/communes_17122018.csv.json", (data) => {
      data.forEach(loc => {
        locations[loc.insee] = loc.nom
        $('<option>', {
          value: loc.insee,
          text: `${loc.nom} (${loc.insee})`
        }).appendTo('datalist#location-names')
      })
    })
    $.getJSON("static/data/epci.csv.json", (data) => {
      data.forEach(loc => {
        locations[loc.code] = loc.nom
        $('<option>', {
          value: loc.code,
          text: `${loc.nom} (${loc.code})`
        }).appendTo('datalist#location-names')
      })
    })
  })

  function getLocationData(code) {
    if (!code) return
    const name = locations[code]
    if (name) {
      return {
        code,
        name
      }
    }
  }

  function codeToId(l) {
    return `loc-${l.code}`
  }

  function addLocationTag(location) {
    const id = codeToId(location)
    if ($(`#${id}`).length) return

    $('ul#locations').append($('<li>', {
      id: location.code
    }))
    $('<button>', {
        "class": "fr-tag fr-tag--dismiss",
        text: `${location.name} (${location.code})`,
        value: location.code,
        ariaLabel: `Retirer ${location.name}`,
        click: removeTag
      })
      .appendTo(`li#${location.code}`)
    // add as hidden input for form submission and tracking
    $('<input>', {
      type: 'hidden',
      name: location.code.length === COMMUNE_INSEE_CODE_LENGTH ? 'communes[]' : 'epcis[]',
      value: location.code,
      id
    }).appendTo('form')
  }

  $('#location-search').on('change input', (event) => {
    let code = event.target.value
    // it isn't possible to add an event handler on option select so I've set the option values
    // to end in a space as a hacky workaround for detecting datalist selections
    const dataEntryCompleted = code.endsWith(" ")
    // this relies on all codes being convertible to truthy numbers
    code = code.trim()
    let isPotentialCode = code.length === COMMUNE_INSEE_CODE_LENGTH || code.length === EPCI_SIREN_LENGTH || ['1', '2', '3', '4'].includes(code)
    if (!dataEntryCompleted || !isPotentialCode) return
    handleInputChange(code)
  })

  // monitor pressing enter key
  $("#location-search").keypress((event) => {
    if (event.which == 13) {
      event.preventDefault();
      handleInputChange(event.target.value)
    }
  })

  $("button#add-tag").click((event) => {
    handleInputChange($('#location-search')[0].value)
  })

  function handleInputChange(value) {
    if (!value) return
    const code = value.trim()
    const location = getLocationData(code)
    if (location) {
      addLocationTag(location)
      document.getElementById('location-search').value = ""
    }
  }

  function removeTag(event) {
    event.preventDefault()
    $(`#${codeToId(event.target.value)}`).remove()
    event.target.parentNode.parentNode.removeChild(event.target.parentNode)
  }
</script>